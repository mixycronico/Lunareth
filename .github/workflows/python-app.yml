# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: CoreC CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout cÃ³digo
      uses: actions/checkout@v4

    - name: Configurar Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Instalar dependencias
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-asyncio flake8 black

    - name: Configurar PYTHONPATH
      run: |
        export PYTHONPATH=$PYTHONPATH:$GITHUB_WORKSPACE/corec:$GITHUB_WORKSPACE/plugins
        echo "PYTHONPATH=$PYTHONPATH" >> $GITHUB_ENV

    - name: Ejecutar flake8
      run: |
        flake8 corec plugins --config=.flake8

    - name: Verificar formato con black
      run: |
        black --check corec plugins

    - name: Ejecutar pruebas de CryptoTrading
      run: |
        pytest plugins/crypto_trading/tests/test_crypto_trading.py --cov=plugins/crypto_trading --cov-report=xml:coverage_crypto.xml

    - name: Ejecutar pruebas de Codex
      run: |
        pytest plugins/codex/tests/test_codex.py --cov=plugins/codex --cov-report=xml:coverage_codex.xml

    - name: Subir cobertura
      uses: codecov/codecov-action@v4
      with:
        files: ./coverage_crypto.xml,./coverage_codex.xml
        token: ${{ secrets.CODECOV_TOKEN }}
      if: success()

    - name: Guardar artefactos
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          coverage_crypto.xml
          coverage_codex.xml
          plugins/codex/logs/*.log
