# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: CoreC CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: corec_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:6
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-asyncio flake8 fastapi httpx python-dotenv pytest-cov

      - name: Create .env file
        run: |
          echo "DB_PASSWORD=test_password" >> .env
          echo "REDIS_PASSWORD=secure_password" >> .env
          echo "API_KEY=test_key" >> .env

      - name: Check for model.pth
        run: |
          if [ -f corec/models/mobilev3/model.pth ]; then
            echo "model.pth found, skipping model generation"
          else
            echo "model.pth not found, checking for generate_model.py"
            if [ -f corec/models/mobilev3/generate_model.py ]; then
              echo "generate_model.py found, generating model"
              python corec/models/mobilev3/generate_model.py
            else
              echo "Neither model.pth nor generate_model.py found, failing"
              exit 1
            fi
          fi
        env:
          PYTHONPATH: .

      - name: Lint with flake8
        run: |
          flake8 . --max-line-length=120 --exclude=venv,build,dist

      - name: Run tests
        run: |
          pytest tests/ -v --cov=./ --cov-report=xml
        env:
          PYTHONPATH: .
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          REDIS_HOST: localhost
          REDIS_PORT: 6379

      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.xml
          fail_ci_if_error: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Start Celery worker
        run: |
          celery -A corec.celery_config.celery_app worker --loglevel=info --detach
        env:
          PYTHONPATH: .

      - name: Run FastAPI tests
        run: |
          uvicorn app:app --host 0.0.0.0 --port 8000 --reload &
          sleep 5
          pytest tests/test_fastapi.py -v
        env:
          PYTHONPATH: .

      - name: Stop Celery worker
        run: |
          pkill -f 'celery worker'
